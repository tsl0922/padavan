#!/bin/bash
#
# Copyright (C) 2021 Masatake YAMATO <yamato@redhat.com>
#
# This file is part of util-linux.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
TS_TOPDIR="${0%/*}/../.."
TS_DESC="directory"

. $TS_TOPDIR/functions.sh
ts_init "$*"

ts_check_test_command "$TS_CMD_LSFD"
ts_check_test_command "$TS_HELPER_MKFDS"

ts_check_prog "stat"
ts_check_prog "id"
ts_check_prog "sed"

ts_cd "$TS_OUTDIR"

PID=
FD=3
EXPR=

{
    coproc MKFDS { "$TS_HELPER_MKFDS" directory $FD; }
    if read -u ${MKFDS[0]} PID; then
	EXPR='(PID == '"${PID}"') and (FD == '"$FD"')'
	${TS_CMD_LSFD} -n -o ASSOC,MODE,TYPE,FLAGS,NAME -Q "${EXPR}" | {
	    #
	    # Normalize the output:
	    #
	    # See https://github.com/util-linux/util-linux/issues/1511#issuecomment-1029968595
	    # It seems that syscalls opening a directory on mips64 GNU/Linux take the
	    # O_LARGEFILE flag.
	    #
	    sed -e 's/largefile,\|,largefile//'
	}
	echo 'ASSOC,MODE,TYPE,FLAGS,NAME': $?

	LSFD_PID=$(${TS_CMD_LSFD} --raw -n -o PID -Q "${EXPR}")
	echo 'PID[RUN]:' $?
	[ "${LSFD_PID}" == "${PID}" ]
	echo 'PID[STR]:' $?

	LSFD_INODE=$(${TS_CMD_LSFD} --raw -n -o INODE -Q "${EXPR}")
	echo 'INODE[RUN]:' $?
	[ "${LSFD_INODE}"  == "$(stat -c %i /)" ]
	echo 'INODE[STR]:' $?

	LSFD_UID=$(${TS_CMD_LSFD} --raw -n -o UID -Q "${EXPR}")
	echo 'UID[RUN]:' $?
	[ "${LSFD_UID}" == $(id -u) ]
	echo 'UID[STR]:' $?

	LSFD_USER=$(${TS_CMD_LSFD} --raw -n -o USER -Q "${EXPR}")
	echo 'USER[RUN]:' $?
	[ "${LSFD_USER}" == $(id -u -n) ]
	echo 'USER[STR]:' $?

	LSFD_NLINK=$(${TS_CMD_LSFD} --raw -n -o NLINK -Q "${EXPR}")
	echo 'NLINK[RUN]:' $?
	if [ "${LSFD_NLINK}" == $(stat -c %h /) ]; then
	    echo 'NLINK[STR]:' 0
	else
	    echo 'NLINK[STR]:' 1
	    echo 'LSFD_NLINK:' "${LSFD_NLINK}"
	    echo 'stat reports:' "$(stat -c %h /)"
	fi

	kill -CONT ${PID}
	wait ${MKFDS_PID}
    fi
} > $TS_OUTPUT 2>&1

ts_finalize
