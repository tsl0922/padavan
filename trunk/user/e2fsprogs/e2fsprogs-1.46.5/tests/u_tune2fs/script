test_description="e2undo with tune2fs"
if test -x $E2UNDO_EXE; then

E2FSPROGS_UNDO_DIR=${TMPDIR:-/tmp}
export E2FSPROGS_UNDO_DIR
TDB_FILE=$E2FSPROGS_UNDO_DIR/tune2fs-$(basename $TMPFILE).e2undo
OUT=$test_name.log
rm -f $TDB_FILE >/dev/null 2>&1

dd if=/dev/zero of=$TMPFILE bs=1k count=512 > /dev/null 2>&1

echo mke2fs -q -F -o Linux -b 1024 $TMPFILE  > $OUT
$MKE2FS -q -F -o Linux -I 128 -b 1024 $TMPFILE  >> $OUT 2>&1
crc=`$CRCSUM $TMPFILE`
echo $CRCSUM before tune2fs $crc >> $OUT

echo using tune2fs to test e2undo >> $OUT
$TUNE2FS -I 256 $TMPFILE  >> $OUT 2>&1
new_crc=`$CRCSUM $TMPFILE`
echo $CRCSUM after tune2fs $new_crc >> $OUT

$E2UNDO  $TDB_FILE $TMPFILE  >> $OUT 2>&1
new_crc=`$CRCSUM $TMPFILE`
echo $CRCSUM after e2undo $new_crc >> $OUT

if [ $crc = $new_crc ]; then
	echo "$test_name: $test_description: ok"
	touch $test_name.ok
else
	ln -f $test_name.log $test_name.failed
	echo "$test_name: $test_description: failed"
fi
rm -f $TDB_FILE $TMPFILE
fi
